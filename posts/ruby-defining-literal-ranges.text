# Ruby: Defining literal ranges

 - published: 2011-11-10 01:50
 - tags: programming, ruby

In Ruby it's simple to define literal ranges by doing something like: 

    #! Ruby
    numbers = 0..10
    
    # prints the numbers 0 through 10
    numbers.each { |n| puts n }

Ruby also lets you use '...' in order to specify an exclusive range. This works similar to the example above but ignores the very last number:

    #! Ruby
    numbers = 0...10
    
    # prints the number 0 through 9
    numbers.each { |n| puts n }

This is useful if you have a count variable and want to define a range without having to do a _minus one_ on it:

    #! Ruby
    range = 4..(count - 1)
    
    # as opposed to
    
    range = 4...count

In the end both range definitions have their uses - the main thing is just remembering which is which :-P